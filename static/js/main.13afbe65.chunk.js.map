{"version":3,"sources":["api/api.ts","components/GoodItem/GoodItem.tsx","components/GoodsList/GoodsList.tsx","App.tsx","index.tsx"],"names":["getGoods","fetch","then","response","json","GoodItem","name","color","className","style","GoodsList","goods","map","good","key","id","App","state","downloadAllGoods","setState","downloadFiveGoods","sort","a","b","localeCompare","slice","downloadRedGoods","filter","this","type","onClick","React","Component","ReactDOM","render","document","getElementById"],"mappings":"oPAEaA,G,MAAW,WACtB,OAAOC,MAHG,yEAGQC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,YCIjCC,EAA8B,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,MAAT,OACzC,wBACEC,UAAU,aACVC,MAAO,CAAEF,UAERD,ICLQI,EAAgC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OAC3C,wBAAIH,UAAU,QACXG,EAAMC,KAAI,SAAAC,GAAI,OACb,kBAAC,EAAD,CACEC,IAAKD,EAAKE,GACVT,KAAMO,EAAKP,KACXC,MAAOM,EAAKN,aCJPS,EAAb,2MACEC,MAAQ,CACNN,MAAO,IAFX,EAKEO,iBAAmB,WACjBlB,IAAWE,MAAK,SAAAS,GACd,EAAKQ,SAAS,CAAER,cAPtB,EAWES,kBAAoB,WAClBpB,IAAWE,MAAK,SAAAS,GACd,EAAKQ,SAAS,CACZR,MAAOA,EACJU,MAAK,SAACC,EAASC,GAAV,OAAsBD,EAAEhB,KAAKkB,cAAcD,EAAEjB,SAClDmB,MAAM,EAAG,SAhBpB,EAqBEC,iBAAmB,WACjB1B,IAAWE,MAAK,SAAAS,GACd,EAAKQ,SAAS,CACZR,MAAOA,EAAMgB,QAAO,SAACd,GAAD,MAA+B,QAAfA,EAAKN,eAxBjD,wEA6BY,IACAI,EAAUiB,KAAKX,MAAfN,MAER,OACE,yBAAKH,UAAU,OACb,qDACA,4BACEqB,KAAK,SACLrB,UAAU,SACVsB,QAASF,KAAKV,kBAHhB,aAOA,4BACEW,KAAK,SACLrB,UAAU,SACVsB,QAASF,KAAKR,mBAHhB,cAOA,4BACES,KAAK,SACLrB,UAAU,SACVsB,QAASF,KAAKF,kBAHhB,aAOA,kBAAC,EAAD,CAAWf,MAAOA,SAxD1B,GAAyBoB,IAAMC,WCL/BC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.13afbe65.chunk.js","sourcesContent":["const URL = 'https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json';\n\nexport const getGoods = () => {\n  return fetch(URL).then(response => response.json());\n};\n","import React, { FC } from 'react';\n\ninterface GoodItemProps {\n  name: string;\n  color: string;\n}\n\nexport const GoodItem: FC<GoodItemProps> = ({ name, color }) => (\n  <li\n    className=\"list__item\"\n    style={{ color }}\n  >\n    {name}\n  </li>\n);\n","import React, { FC } from 'react';\nimport { GoodItem } from '../GoodItem/GoodItem';\n\ninterface GoodsListProps {\n  goods: Good[];\n}\n\nexport const GoodsList: FC<GoodsListProps> = ({ goods }) => (\n  <ul className=\"list\">\n    {goods.map(good => (\n      <GoodItem\n        key={good.id}\n        name={good.name}\n        color={good.color}\n      />\n    ))}\n  </ul>\n);\n","import React from 'react';\nimport './App.css';\nimport { getGoods } from './api/api';\nimport { GoodsList } from './components/GoodsList/GoodsList';\n\ninterface AppState {\n  goods: Good[];\n}\n\nexport class App extends React.Component<{}, AppState> {\n  state = {\n    goods: [],\n  };\n\n  downloadAllGoods = () => {\n    getGoods().then(goods => {\n      this.setState({ goods });\n    });\n  };\n\n  downloadFiveGoods = () => {\n    getGoods().then(goods => {\n      this.setState({\n        goods: goods\n          .sort((a: Good, b: Good) => a.name.localeCompare(b.name))\n          .slice(0, 5),\n      });\n    });\n  };\n\n  downloadRedGoods = () => {\n    getGoods().then(goods => {\n      this.setState({\n        goods: goods.filter((good: Good) => good.color === 'red'),\n      });\n    });\n  };\n\n  render() {\n    const { goods } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>Dynamic list of Goods</h1>\n        <button\n          type=\"button\"\n          className=\"button\"\n          onClick={this.downloadAllGoods}\n        >\n          All goods\n        </button>\n        <button\n          type=\"button\"\n          className=\"button\"\n          onClick={this.downloadFiveGoods}\n        >\n          Five goods\n        </button>\n        <button\n          type=\"button\"\n          className=\"button\"\n          onClick={this.downloadRedGoods}\n        >\n          Red goods\n        </button>\n        <GoodsList goods={goods} />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}